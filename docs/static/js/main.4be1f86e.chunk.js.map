{"version":3,"sources":["components/Info/Info.module.css","components/ProjectDetail/ProjectDetail.module.css","lib/hooks/useAsyncReducer.ts","lib/helpers.ts","lib/apiService/parser/util.ts","lib/apiService/parser/projectParser.ts","lib/apiService/parser/infoBlockParser.ts","lib/apiService/parser/configParser.ts","lib/apiService/parser/siteContentParser.ts","lib/apiService/apiService.ts","store/store.ts","components/Navigation/Navigation.tsx","components/Curtain/Curtain.tsx","components/Logo/Logo.tsx","components/Button/Button.tsx","components/Image/Image.tsx","components/Projects/ProjectsItem/ProjectsItem.tsx","components/Projects/Projects.tsx","components/RichText/RichText.tsx","components/Info/InfoItem/InfoItem.tsx","components/Info/Info.tsx","components/PageBox/PageBox.tsx","components/Icons/CloseIcon.tsx","components/ProjectDetail/NavClose/NavClose.tsx","components/Icons/Arrows.tsx","components/ProjectDetail/NavSkip/NavSkip.tsx","components/ProjectDetail/ProjectDetail.tsx","App.tsx","index.tsx","components/ProjectDetail/NavClose/NavClose.module.css","components/ProjectDetail/NavSkip/NavSkip.module.css","App.module.css","components/Navigation/Navigation.module.css","components/Button/Button.module.css","components/Projects/ProjectsItem/ProjectsItem.module.css","components/RichText/RichText.module.css","components/PageBox/PageBox.module.css","components/Projects/Projects.module.css","components/Image/Image.module.css","components/Logo/Logo.module.css","components/Info/InfoItem/InfoItem.module.css","components/Curtain/Curtain.module.css"],"names":["module","exports","useAsyncReducer","reducer","initState","useReducer","state","dispatch","asyncDispatch","useMemo","action","Promise","then","wrapAsync","getContentWidth","config","width","Math","round","min","imageSize","numberFromPx","getStyleVariable","window","innerWidth","isMobile","isPortrait","getImageRatio","ratio","Number","isObject","val","Array","isArray","isHexColor","test","innerHeight","screen","orientation","type","includes","styleVariables","name","value","getComputedStyle","document","documentElement","getPropertyValue","endsWith","slice","incrementIndex","list","index","increment","length","parseRichText","entry","hasOwnProperty","console","warn","parseImage","sys","fields","id","title","file","url","details","image","height","projectParser","item","project","createdAt","Date","toISOString","text","footnote","thumbnail","images","position","titel","fussnote","bilder","map","filter","infoBlockParser","infoBlock","richText","bild","configParser","enabled","documentTitle","animationTime","palette","black","grey","lightgrey","white","configAktiv","websiteTitel","animationszeit","max","maximaleBildgre","bildSeitenverhltnis","split","e","counter","denominator","isNaN","schwarz","grau","hellgrau","weiss","ItemIds","siteContentParser","raw","siteContent","projects","infoBlocks","items","Asset","forEach","contentType","parsedProject","unshift","parsedInfoBlock","parsedConfig","positioned","sort","a","b","sorted","getTime","splice","sortProjects","contentful","require","apiService","_client","this","createClient","space","accessToken","getEntries","response","getAsset","asset","ActionTypes","Pages","targetPage","selectedPage","selectedProjectId","payload","actions","getSiteContent","resolve","style","setProperty","setTarget","target","setPage","page","setProjectId","projectId","Navigation","isMobileNav","mobileNavIndex","children","className","cx","styles","mobileNav","spacer","Curtain","open","onOpen","onClose","left","closed","right","onTransitionEnd","Logo","Button","label","active","disabled","cta","stopPropagation","onClick","event","Image","imageRef","useRef","useState","src","setSrc","loaded","setLoaded","useEffect","getImageUrl","imageUrl","catch","err","timeoutId","setTimeout","imageLoadingTimeout","clearTimeout","ImageBox","opacity","ref","alt","onLoad","onError","ProjectsItem","callback","prevWidth","padding","Projects","centerLine","Sizes","M","S","Object","values","renderRichText","documentToReactComponents","RichText","size","mediumSize","smallSize","InfoItem","Info","isTransitioning","setIsTransitioning","infoCurtain","isOpen","isClosed","onAnimationEnd","prevSelected","PageBox","selected","scroll","isTarget","isSelected","CloseIcon","fontSize","transform","NavClose","numProjects","currentIndex","counterButton","closeButton","ArrowLeft","ArrowRight","NavSkip","selectPrev","selectNext","skipButton","ProjectDetail","find","indexOf","prevIndex","nextIndex","textBoxRight","textBoxWidth","imageBox","textBox","App","isHome","mobileNavButton","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4be1f86e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Info\":\"Info_Info__3WoRg\",\"infoCurtain\":\"Info_infoCurtain__17dII\",\"isTransitioning\":\"Info_isTransitioning__1fRnE\",\"isClosed\":\"Info_isClosed__30Tas\",\"close\":\"Info_close__3kAyz\",\"isOpen\":\"Info_isOpen__3spwN\",\"open\":\"Info_open__SO0W7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectDetail\":\"ProjectDetail_ProjectDetail__3C2sP\",\"imageBox\":\"ProjectDetail_imageBox__3qDiS\",\"textBox\":\"ProjectDetail_textBox__l3wqu\",\"space\":\"ProjectDetail_space__oKQy0\"};","import { State, Reducer } from '../../store';\nimport { Dispatch, useMemo, useReducer } from 'react';\n\nexport type AsyncDispatch<T> = Dispatch<T | Promise<T>>\n\nfunction wrapAsync<T>(dispatch: Dispatch<T>): AsyncDispatch<T> {\n    return (action: T | Promise<T>) => {\n        if (action instanceof Promise) {\n            return action.then(dispatch);\n        }\n        return dispatch(action);\n    };\n}\n\nfunction useAsyncReducer(reducer: Reducer, initState: State) {\n    const [ state, dispatch ] = useReducer(reducer, initState);\n    const asyncDispatch = useMemo(() => wrapAsync(dispatch), [ dispatch] );\n\n    return { state, asyncDispatch };\n}\n\nexport default useAsyncReducer;\n","import { Config } from './apiService';\n\nexport function applyStylesFromConfig(config: Config): void {\n    // @ts-ignore\n    if (!config.enabled) {\n        return;\n    }\n    // @ts-ignore\n    document.title = config.documentTitle;\n    // @ts-ignore\n    document.documentElement.style.setProperty('--black', config.palette.black);\n    // @ts-ignore\n    document.documentElement.style.setProperty('--grey', config.palette.grey);\n    // @ts-ignore\n    document.documentElement.style.setProperty('--lightgrey', config.palette.lightgrey);\n    // @ts-ignore\n    document.documentElement.style.setProperty('--white', config.palette.white);\n    // @ts-ignore\n    document.documentElement.style.setProperty('--animation-time', `${config.animationTime}s`);\n}\n\nexport function getContentWidth(config: Config): number {\n    let width = Math.round(Math.min(\n        (config?.imageSize || numberFromPx(getStyleVariable('--default-content-width'))),\n        (window.innerWidth / 2))\n    );\n    if (isMobile() && isPortrait()) {\n        width = window.innerWidth - (2 * numberFromPx(getStyleVariable('--padding-medium')));\n    }\n    return width;\n}\n\nexport function getImageRatio(config: Config) {\n    return config?.ratio || Number(getStyleVariable('--default-image-ratio'));\n}\n\nexport function isObject(val: any): Boolean {\n    return val !== null && typeof val !== 'function' && typeof val === 'object' && !Array.isArray(val);\n}\n\nexport function isHexColor(val: any): Boolean {\n    return /#[0-9A-Fa-f]{3}/.test(val) || /#[0-9A-Fa-f]{6}/.test(val);\n}\n\nexport function isPortrait(): boolean {\n    let isPortrait = window.innerWidth < window.innerHeight;\n    if (isObject(window.screen.orientation)) {\n        const { type } = window.screen.orientation;\n        isPortrait = typeof type === 'string' && type.includes('portrait');\n    }\n    return isPortrait;\n}\n\nexport function isMobile(): boolean {\n    if (isPortrait()) {\n        return window.innerWidth < 620;\n    }\n    return window.innerWidth < 820;\n}\n\nconst styleVariables: { [key: string]: string } = {};\n\nexport function getStyleVariable(name: string): string {\n    if (styleVariables[name]) {\n        return styleVariables[name];\n    }\n    const value = window.getComputedStyle(document.documentElement).getPropertyValue(name);\n    styleVariables[name] = value;\n    return value;\n}\n\nexport function numberFromPx(value: string): number {\n    if (value.endsWith('px')) {\n        return Number(value.slice(0, -2));\n    }\n    return 0;\n}\n\nexport function incrementIndex(list: Array<any>, index: number, increment: number): number {\n    return (list.length + index + increment) % list.length;\n}","import { ParsedImage, Project } from '../index';\nimport { isObject } from '../../helpers';\nimport { EntryFields } from 'contentful';\n\nexport function parseRichText(entry: EntryFields.Object): EntryFields.RichText | null {\n    if (\n        !isObject(entry)\n        || !entry.hasOwnProperty('content')\n        || !entry.hasOwnProperty('nodeType')\n    ) {\n        console.warn('unknown rich text entry', entry);\n        return null;\n    }\n    return entry;\n}\n\nexport function parseImage(entry: EntryFields.Object): ParsedImage | null {\n    if (\n        !isObject(entry)\n        || !isObject(entry.sys)\n        || !isObject(entry.fields)\n    ) {\n        console.warn('unknown image entry', entry);\n        return null;\n    }\n    return {\n        id: entry.sys.id,\n        title: entry.fields.title,\n        file: {\n            url: isObject(entry.fields.file) ? entry.fields.file.url : '',\n            width: isObject(entry.fields.file?.details?.image) ? entry.fields.file.details.image.width : 0,\n            height: isObject(entry.fields.file?.details?.image) ? entry.fields.file.details.image.height : 0\n        }\n    }\n}\n\nexport function sortProjects(projects: Array<Project>): Array<Project> {\n    const positioned = projects\n        .filter((project: Project) => project.position > -1)\n        .sort((a, b) => a.position - b.position);\n\n    const sorted = projects\n        .filter((project: Project) => project.position <= -1)\n        .sort((a, b) => {\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n        });\n\n    positioned.forEach((project: Project) => sorted.splice(Math.max(project.position - 1, 0), 0, project));\n\n    return sorted;\n}","import { RawEntry, Project } from '../index';\nimport { EntryFields } from 'contentful';\nimport { isObject } from '../../helpers';\nimport { parseRichText, parseImage } from './util';\n\n\nfunction projectParser(item: RawEntry) {\n    if (!isObject(item.fields) || !isObject(item.sys)) {\n        console.warn('unknown project item', item);\n        return;\n    }\n    const project: Project = {\n        id: '',\n        createdAt: new Date().toISOString(),\n        title: '',\n        text: null,\n        footnote: null,\n        thumbnail: null,\n        images: [],\n        position: -1\n    };\n    if (typeof item.sys.id === typeof project.id) {\n        project.id = item.sys.id;\n    }\n    if (typeof item.sys.createdAt === typeof project.createdAt) {\n        project.createdAt = item.sys.createdAt;\n    }\n    if (typeof item.fields.titel === typeof project.title) {\n        project.title = item.fields.titel;\n    }\n    const text = parseRichText(item.fields.text);\n    if (text) {\n        project.text = text;\n    }\n    const footnote = parseRichText(item.fields.fussnote);\n    if (footnote) {\n        project.footnote = footnote;\n    }\n    const thumbnail = parseImage(item.fields.thumbnail);\n    if (thumbnail) {\n        project.thumbnail = thumbnail;\n    }\n    if (Array.isArray(item.fields.bilder)) {\n        project.images = item.fields.bilder.map((entry: EntryFields.Object) => parseImage(entry)).filter((entry: EntryFields.Object) => !!entry);\n    }\n    if (typeof item.fields.position === typeof project.position) {\n        project.position = item.fields.position;\n    }\n    return project;\n}\n\nexport default projectParser;","import { RawEntry, InfoBlock } from '../index';\nimport { isObject } from '../../helpers';\nimport { parseRichText, parseImage } from './util';\nimport { EntryFields } from 'contentful';\n\n\nfunction infoBlockParser(item: RawEntry): InfoBlock | null {\n    if (!isObject(item.fields)) {\n        console.warn('unknown info block item', item);\n        return null;\n    }\n    const infoBlock: InfoBlock = {\n        text: null,\n        images: []\n    };\n    if (item.fields.text) {\n        const richText = parseRichText(item.fields.text);\n        if (richText) {\n            infoBlock.text = richText;\n        }\n    }\n    if (Array.isArray(item.fields.bild)) {\n        infoBlock.images = item.fields.bild.map((entry: EntryFields.Object) => parseImage(entry)).filter((entry: EntryFields.Object) => !!entry);\n    }\n    return infoBlock;\n}\n\nexport default infoBlockParser;","import { RawEntry, Config } from '../index';\nimport { isHexColor, isObject } from '../../helpers';\n\nconst minAnimationTime = 0.2;\nconst maxAnimationTime = 4;\nconst minImageSize = 400;\nconst maxImageSize = 1000;\nconst minImageRatio = 1;\nconst maxImageRatio = 2;\n\n\nfunction configParser(item: RawEntry): Config {\n    const config = {\n        enabled: false,\n        documentTitle: '',\n        animationTime: 0,\n        imageSize: 0,\n        ratio: 0,\n        palette: {\n            black: '#000',\n            grey: '#999',\n            lightgrey: '#E5E5E5',\n            white: '#FFF'\n        }\n    };\n    if (!isObject(item.fields)) {\n        console.warn('unknown config item', item);\n        return config;\n    }\n    if (typeof item.fields.configAktiv === typeof config.enabled) {\n        config.enabled = item.fields.configAktiv;\n    }\n    if (typeof item.fields.websiteTitel === typeof config.documentTitle) {\n        config.documentTitle = item.fields.websiteTitel;\n    }\n    if (typeof item.fields.animationszeit === typeof config.animationTime) {\n        config.animationTime = Math.min(maxAnimationTime, Math.max(minAnimationTime, item.fields.animationszeit));\n    }\n    if (typeof item.fields.maximaleBildgre === typeof config.imageSize) {\n        config.imageSize = Math.min(maxImageSize, Math.max(minImageSize, item.fields.maximaleBildgre));\n    }\n    if (typeof item.fields.bildSeitenverhltnis === 'string') {\n        const [ counter, denominator ] = item.fields.bildSeitenverhltnis.split(':').map((e: any) => Number(e));\n        if (!isNaN(counter) && !isNaN(denominator)) {\n            config.ratio = Math.min(maxImageRatio, Math.max(minImageRatio, counter / denominator));\n        }\n    }\n    if (isHexColor(item.fields.schwarz)) {\n        config.palette.black = item.fields.schwarz;\n    }\n    if (isHexColor(item.fields.grau)) {\n        config.palette.grey = item.fields.grau;\n    }\n    if (isHexColor(item.fields.hellgrau)) {\n        config.palette.lightgrey = item.fields.hellgrau;\n    }\n    if (isHexColor(item.fields.weiss)) {\n        config.palette.white = item.fields.weiss;\n    }\n    return config;\n}\n\nexport default configParser;","import { RawEntry, SiteContent } from '../index';\nimport { EntryCollection } from 'contentful';\nimport { isObject } from '../../helpers';\nimport projectParser from './projectParser';\nimport infoBlockParser from './infoBlockParser';\nimport configParser from './configParser';\nimport { sortProjects } from './util';\n\nconst ItemIds: { [key: string]: string } = {\n    PROJECT: 'projekt',\n    INFO_BLOCK: 'infoBlock',\n    CONFIG: 'config'\n};\n\n\nfunction siteContentParser(raw: EntryCollection<RawEntry>): SiteContent {\n    const siteContent: SiteContent = {\n        projects: [],\n        infoBlocks: [],\n        config: null\n    };\n\n    if (\n        !isObject(raw)\n        || !Array.isArray(raw.items)\n        || !isObject(raw.includes)\n        || !Array.isArray(raw.includes.Asset)\n    ) {\n        console.warn('unknown raw data', raw);\n        return siteContent;\n    }\n\n    raw.items.forEach(item => {\n        if (!isObject(item)) {\n            console.warn('unknown item', item);\n            return;\n        }\n        switch(item.sys?.contentType?.sys?.id) {\n            case ItemIds.PROJECT:\n                const parsedProject = projectParser(item);\n                if (!parsedProject) {\n                    break;\n                }\n                siteContent.projects.unshift(parsedProject);\n                break;\n            case ItemIds.INFO_BLOCK:\n                const parsedInfoBlock = infoBlockParser(item);\n                if (!parsedInfoBlock) {\n                    break;\n                }\n                siteContent.infoBlocks.unshift(parsedInfoBlock);\n                break;\n            case ItemIds.CONFIG:\n                if (siteContent.config) {\n                    break;\n                }\n                const parsedConfig = configParser(item);\n                if (!parsedConfig) {\n                    break;\n                }\n                siteContent.config = parsedConfig;\n                break;\n            default:\n                console.warn('unknown item type', item);\n        }\n    });\n\n    siteContent.projects = sortProjects(siteContent.projects);\n\n    return siteContent;\n}\n\nexport default siteContentParser;","import { ContentfulClientApi, EntryCollection } from 'contentful';\nimport { SiteContent } from './index';\nimport siteContentParser from './parser/siteContentParser';\n\nconst contentful = require('contentful');\n\nconst space = 'b522n0157zmv';\nconst accessToken = 'k5don56ounRIbth9QrBNF1jZ14zqfcQ2muxGIfwg0r4';\n\n\nclass ApiService {\n    _client: ContentfulClientApi;\n\n    constructor() {\n        this._client = contentful.createClient({\n            space,\n            accessToken\n        });\n    }\n\n    getSiteContent(): Promise<SiteContent> {\n        return this._client.getEntries()\n            .then((response: EntryCollection<any>) => siteContentParser(response));\n    }\n\n    getImageUrl({ id, width, height }: { id: string, width: number, height: number }): Promise<string> {\n        return this._client.getAsset(id)\n            .then(asset => `${asset.fields.file.url}?fit=fill&w=${width}&h=${height}`);\n    }\n}\n\nexport const apiService = new ApiService();","import { Page, State, ActionTypesType, PagesType, Action, Actions } from './index';\nimport { apiService } from '../lib/apiService/apiService';\nimport { applyStylesFromConfig } from '../lib/helpers';\n\n\n// enums\n\nexport const ActionTypes: ActionTypesType = {\n    GET_SITE_CONTENT: 'get-site-content',\n    SET_TARGET: 'set-target',\n    SET_PAGE: 'set-page',\n    SET_PROJECT_ID: 'set-project-id'\n};\n\nexport const Pages: PagesType = {\n    HOME: 'home',\n    PROJECTS: 'projects',\n    PROJECT_DETAIL: 'project-detail',\n    INFO: 'info'\n};\n\n\n// initial state\n\nexport const initState = {\n    siteContent: {\n        projects: [],\n        infoBlocks: [],\n        config: null\n    },\n    targetPage: Pages.HOME,\n    selectedPage: Pages.HOME,\n    selectedProjectId: ''\n};\n\n\n// reducer\n\nexport function reducer(state: State, action: Action): State {\n    switch (action.type) {\n        case ActionTypes.GET_SITE_CONTENT:\n            return { ...state, siteContent: action.payload };\n        case ActionTypes.SET_TARGET:\n            return { ...state, targetPage: action.payload };\n        case ActionTypes.SET_PAGE:\n            return { ...state, selectedPage: action.payload };\n        case ActionTypes.SET_PROJECT_ID:\n            return { ...state, selectedProjectId: action.payload };\n        default:\n            return state;\n    }\n}\n\n\n// actions\n\nfunction getSiteContent(): Promise<Action> {\n    return new Promise(resolve => {\n        apiService.getSiteContent()\n            .then(siteContent => {\n                applyStylesFromConfig(siteContent.config);\n                resolve({ type: ActionTypes.GET_SITE_CONTENT, payload: siteContent });\n            });\n    });\n}\n\nfunction setTarget(target: Page): Action {\n    return { type: ActionTypes.SET_TARGET, payload: target };\n}\n\nfunction setPage(page: Page): Action {\n    return { type: ActionTypes.SET_PAGE, payload: page };\n}\n\nfunction setProjectId(projectId: string): Action {\n    return { type: ActionTypes.SET_PROJECT_ID, payload: projectId };\n}\n\nexport const actions: Actions = {\n    getSiteContent,\n    setTarget,\n    setPage,\n    setProjectId\n};\n","import styles from './Navigation.module.css';\nimport cx from 'classnames';\n\ntype NavigationProps = {\n    isMobileNav?: boolean;\n    mobileNavIndex?: number;\n    children: JSX.Element | Array<JSX.Element>;\n};\n\n\nfunction Navigation({ isMobileNav, mobileNavIndex = -1, children }: NavigationProps): JSX.Element {\n    if (mobileNavIndex > -1 && Array.isArray(children)) {\n        children = children.slice(mobileNavIndex, mobileNavIndex + 1);\n    }\n\n    return (\n        <>\n            <div\n                className={cx(styles.Navigation, {\n                    [styles.mobileNav]: isMobileNav\n                })}\n            >\n                {children}\n            </div>\n            {isMobileNav && (\n                <div className={styles.spacer} />\n            )}\n        </>\n    );\n}\n\nexport default Navigation;","import styles from './Curtain.module.css';\nimport cx from 'classnames';\n\ntype CurtainProps = {\n    open: boolean;\n    onOpen?: () => void;\n    onClose?: () => void;\n};\n\n\nfunction Curtain({ open, onOpen, onClose }: CurtainProps): JSX.Element {\n    return (\n        <>\n            <div\n                className={cx(`${styles.Curtain} ${styles.left}`, {\n                    [styles.open]: open,\n                    [styles.closed]: !open\n                })}\n            />\n            <div\n                className={cx(`${styles.Curtain} ${styles.right}`, {\n                    [styles.open]: open,\n                    [styles.closed]: !open\n                })}\n                onTransitionEnd={() => {\n                    if (open) {\n                        if (typeof onOpen !== 'function') {\n                            return;\n                        }\n                        onOpen();\n                    } else {\n                        if (typeof onClose !== 'function') {\n                            return;\n                        }\n                        onClose();\n                    }\n                }}\n            />\n        </>\n    );\n}\n\nexport default Curtain;","import styles from './Logo.module.css';\n\ntype LogoProps = {\n    children: JSX.Element;\n};\n\n\nfunction Logo({ children }: LogoProps): JSX.Element {\n    return (\n        <div className={styles.Logo}>\n            {children}\n        </div>\n    );\n}\n\nexport default Logo;","import styles from './Button.module.css';\nimport cx from 'classnames';\n\ntype ButtonProps = {\n    label: string | JSX.Element;\n    active?: boolean;\n    disabled?: boolean;\n    cta?: () => void;\n    stopPropagation?: boolean;\n    className?: string;\n};\n\n\nfunction Button({ label, active, disabled, cta, stopPropagation, className = '' }: ButtonProps): JSX.Element {\n    return (\n        <button\n            className={cx(styles.Button, {\n                [className]: className,\n                [styles.active]: active,\n                [styles.disabled]: disabled\n            })}\n            onClick={event => {\n                if (stopPropagation) {\n                    event.stopPropagation();\n                }\n                if (disabled || typeof cta !== 'function') {\n                    return;\n                }\n                cta();\n            }}\n        >\n            {label}\n        </button>\n    );\n}\n\nexport default Button;","import { ParsedImage } from '../../lib/apiService';\nimport { useRef, useState, useEffect } from 'react';\nimport styles from './Image.module.css';\nimport { apiService } from '../../lib/apiService/apiService';\n\ninterface ImageProps extends ParsedImage {\n    width: number;\n    ratio: number;\n}\n\nconst imageLoadingTimeout = 5;\n\n\nfunction Image({ width, ratio, id, title, file }: ImageProps): JSX.Element {\n    const height = Math.round(width / ratio);\n\n    const imageRef = useRef(null);\n\n    const [ src, setSrc ] = useState('');\n    const [ loaded, setLoaded ] = useState(false);\n\n    useEffect(() => {\n        apiService.getImageUrl({ id, width, height })\n            .then(imageUrl => setSrc(imageUrl))\n            .catch(err => {\n                console.warn('no image url', err);\n                setSrc(file.url);\n            });\n        const timeoutId = setTimeout(() => setLoaded(true), imageLoadingTimeout * 1000);\n        return () => clearTimeout(timeoutId);\n    }, [ id, width, height, file.url ]);\n\n    return (\n        <div\n            className={styles.ImageBox}\n            style={{ width: `${width}px`, height: `${height}px` }}\n        >\n            {src && (\n                <img\n                    className={styles.Image}\n                    style={{ opacity: loaded ? 1 : 0 }}\n                    ref={imageRef}\n                    src={src}\n                    alt={title}\n                    onLoad={() => setLoaded(true)}\n                    onError={() => setSrc(file.url)}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Image;","import { Project, Config } from '../../../lib/apiService';\nimport styles from './ProjectsItem.module.css';\nimport { getContentWidth, getImageRatio, getStyleVariable, isMobile, numberFromPx } from '../../../lib/helpers';\n\nimport Image from '../../Image/Image';\n\ntype ProjectsItemProps = {\n    item: Project;\n    config: Config;\n    callback: () => void;\n};\n\n\nfunction ProjectsItem({ item, config, callback }: ProjectsItemProps): JSX.Element {\n    if (!item.thumbnail) {\n        return (\n            <div className={styles.ProjectsItem}>no thumbnail</div>\n        );\n    }\n\n    let width = getContentWidth(config);\n    let ratio = getImageRatio(config);\n\n    if (item.thumbnail.file.width === item.thumbnail.file.height) {\n        width = Math.round(width / ratio);\n        ratio = 1;\n    }\n\n    if (item.thumbnail.file.width < item.thumbnail.file.height) {\n        const prevWidth = width;\n        const padding = numberFromPx(getStyleVariable('--padding-medium'));\n\n        width = Math.round(width / ratio);\n        ratio = width / (prevWidth - (4 * padding));\n    }\n\n    return (\n        <div\n            className={styles.ProjectsItem}\n            title={item.title}\n            onClick={() => callback()}\n        >\n            <Image\n                width={width}\n                ratio={ratio}\n                {...item.thumbnail}\n            />\n            {isMobile() && (\n                <h4\n                    className={styles.title}\n                    style={{ width: `${width}px` }}\n                >\n                    {item.title}\n                </h4>\n            )}\n        </div>\n    );\n}\n\nexport default ProjectsItem;","import { Project, Config } from '../../lib/apiService';\nimport styles from './Projects.module.css';\n\nimport ProjectsItem from './ProjectsItem/ProjectsItem';\n\ntype ProjectsProps = {\n    items: Array<Project>;\n    config: Config;\n    setProjectId: (projectId: string) => void;\n};\n\n\nfunction Projects({ items, config, setProjectId }: ProjectsProps): JSX.Element {\n    return (\n        <div className={styles.Projects}>\n            <div className={styles.centerLine} />\n            {items.map((item, index) => (\n                <ProjectsItem\n                    key={index}\n                    item={item}\n                    config={config}\n                    callback={() => setProjectId(item.id)}\n                />\n            ))}\n        </div>\n    );\n}\n\nexport default Projects;","import { EntryFields } from 'contentful';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport styles from './RichText.module.css';\nimport cx from 'classnames';\n\nconst Sizes = {\n    M: 'm',\n    S: 's'\n};\n\nconst Size = Object.values(Sizes);\n\ntype RichTextProps = {\n    entry: EntryFields.RichText;\n    size: typeof Size[number];\n};\n\nfunction renderRichText(entry: EntryFields.RichText) {\n    // @ts-ignore\n    return documentToReactComponents(entry);\n}\n\n\nfunction RichText({ entry, size }: RichTextProps): JSX.Element {\n    return (\n        <div\n            className={cx(styles.RichText, {\n                [styles.mediumSize]: size === Sizes.M,\n                [styles.smallSize]: size === Sizes.S\n            })}\n        >\n            {renderRichText(entry)}\n        </div>\n    );\n}\n\nexport default RichText;","import { InfoBlock } from '../../../lib/apiService';\nimport styles from './InfoItem.module.css';\nimport Image from '../../Image/Image';\nimport RichText from '../../RichText/RichText';\nimport { getStyleVariable, numberFromPx } from '../../../lib/helpers';\n\ntype InfoItemProps = {\n    item: InfoBlock;\n    width: number;\n};\n\n\nfunction InfoItem({ item, width }: InfoItemProps): JSX.Element {\n    return (\n        <div\n            className={styles.InfoItem}\n            style={{ width: `${width}px` }}\n        >\n            {!!item.images.length && (\n                <Image width={width - (2 * numberFromPx(getStyleVariable('--padding-large')))} ratio={1.6} {...item.images[0]} />\n            )}\n            {item.text && (\n                <RichText entry={item.text} size=\"m\" />\n            )}\n        </div>\n    );\n}\n\nexport default InfoItem;","import { useState, useEffect } from 'react';\nimport { InfoBlock, Config } from '../../lib/apiService';\nimport styles from './Info.module.css';\nimport cx from 'classnames';\nimport { getStyleVariable, isMobile, isPortrait, numberFromPx } from '../../lib/helpers';\n\nimport InfoItem from './InfoItem/InfoItem';\n\ntype InfoProps = {\n    items: Array<InfoBlock>;\n    config: Config;\n    open: boolean;\n    onOpen?: () => void;\n    onClose?: () => void;\n};\n\n\nfunction Info({ items, config, open, onOpen, onClose }: InfoProps): JSX.Element {\n    const [ isTransitioning, setIsTransitioning ] = useState(false);\n\n    useEffect(() => setIsTransitioning(true), [ open ]);\n\n    let width = Math.round(Math.min(\n        (config?.imageSize || numberFromPx(getStyleVariable('--default-content-width'))),\n        (window.innerWidth / 2))\n    );\n    if (isMobile() && isPortrait()) {\n        width = window.innerWidth;\n    }\n\n    return (\n        <div\n            className={styles.Info}\n            style={{ width: `${width}px` }}\n        >\n            <div\n                className={cx(styles.infoCurtain, {\n                    [styles.isTransitioning]: isTransitioning,\n                    [styles.isOpen]: open,\n                    [styles.isClosed]: !open\n                })}\n                onAnimationEnd={() => {\n                    setIsTransitioning(false);\n                    if (open) {\n                        if (typeof onOpen !== 'function') {\n                            return;\n                        }\n                        onOpen();\n                    } else {\n                        if (typeof onClose !== 'function') {\n                            return;\n                        }\n                        onClose();\n                    }\n                }}\n            >\n                {items.map((item, index) => (\n                    <InfoItem\n                        key={index}\n                        item={item}\n                        width={width}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Info;","import { Page } from '../../store';\nimport styles from './PageBox.module.css';\nimport cx from 'classnames';\n\ntype PageBoxProps = {\n    page: Page;\n    target: Page;\n    selected: Page;\n    children: JSX.Element;\n};\n\nlet prevSelected: Page | string = '';\n\n\nfunction PageBox({ page, target, selected, children }: PageBoxProps): JSX.Element {\n    if (prevSelected !== selected) {\n        window.scroll(0, 0);\n        prevSelected = selected;\n    }\n\n    return (\n        <div\n            className={cx(styles.PageBox, {\n                [styles.isTarget]: page === target,\n                [styles.isSelected]: page === selected\n            })}\n        >\n            {children}\n        </div>\n    );\n}\n\nexport default PageBox;","function CloseIcon(): JSX.Element {\n    return (\n        <div style={{\n            fontSize: '26px',\n            transform: 'rotate(45deg)'\n        }}>\n            +\n        </div>\n    );\n}\n\nexport default CloseIcon;","import styles from './NavClose.module.css';\nimport { isMobile } from '../../../lib/helpers';\nimport Button from '../../Button/Button';\nimport CloseIcon from '../../Icons/CloseIcon';\n\ntype NavCloseProps = {\n    onClose: () => void;\n    numProjects?: number;\n    currentIndex?: number;\n};\n\n\nfunction NavClose({ onClose, numProjects, currentIndex }: NavCloseProps): JSX.Element {\n    return (\n        <div className={styles.NavClose}>\n            {!isMobile() && typeof numProjects === 'number' && typeof currentIndex === 'number' && (\n                <div className={styles.counter}>\n                    <Button\n                        className={styles.counterButton}\n                        label={`${currentIndex + 1}/${numProjects}`}\n                        disabled\n                    />\n                </div>\n            )}\n            <Button\n                className={styles.closeButton}\n                label={<CloseIcon/>}\n                cta={() => onClose()}\n            />\n        </div>\n    );\n}\n\nexport default NavClose;","export function ArrowLeft(): JSX.Element {\n    return (\n        <span>&larr;</span>\n    );\n}\n\nexport function ArrowRight(): JSX.Element {\n    return (\n        <span>&rarr;</span>\n    );\n}","import styles from './NavSkip.module.css';\nimport Button from '../../Button/Button';\nimport { ArrowLeft, ArrowRight } from '../../Icons/Arrows';\n\ntype NavSkipProps = {\n    selectPrev: () => void;\n    selectNext: () => void;\n};\n\n\nfunction NavSkip({ selectPrev, selectNext }: NavSkipProps): JSX.Element {\n    return (\n        <div className={styles.NavSkip}>\n            <Button\n                className={`${styles.skipButton} ${styles.selectPrev}`}\n                label={<ArrowLeft/>}\n                cta={selectPrev}\n            />\n            <Button\n                className={styles.skipButton}\n                label={<ArrowRight/>}\n                cta={selectNext}\n            />\n        </div>\n    );\n}\n\nexport default NavSkip;","import { EntryFields } from 'contentful';\nimport { Project, Config } from '../../lib/apiService';\nimport styles from './ProjectDetail.module.css';\nimport {\n    getContentWidth,\n    getImageRatio,\n    getStyleVariable,\n    incrementIndex,\n    isMobile,\n    numberFromPx\n} from '../../lib/helpers';\n\nimport Image from '../Image/Image';\nimport RichText from '../RichText/RichText';\nimport NavClose from './NavClose/NavClose';\nimport NavSkip from './NavSkip/NavSkip';\n\ntype ProjectDetailProps = {\n    selectedProjectId: string;\n    projects: Array<Project>;\n    config: Config;\n    setProjectId: (projectId: string) => void;\n    onClose: () => void;\n};\n\n\nfunction ProjectDetail({ selectedProjectId, projects, config, setProjectId, onClose }: ProjectDetailProps): JSX.Element {\n    const project = projects.find((project: any) => project.id === selectedProjectId);\n\n    if (!project) {\n        return (\n            <div>no project</div>\n        );\n    }\n\n    const index = projects.indexOf(project);\n    const prevIndex = incrementIndex(projects, index, -1);\n    const nextIndex = incrementIndex(projects, index, 1);\n\n    const width = getContentWidth(config);\n    const ratio = getImageRatio(config);\n\n    const padding = numberFromPx(getStyleVariable('--padding-medium'));\n    let textBoxRight = (window.innerWidth / 2) - width;\n    let textBoxWidth = width / 2;\n\n    if (textBoxRight < padding) {\n        textBoxRight = padding;\n        textBoxWidth -= padding;\n    }\n\n    return (\n        <div className={styles.ProjectDetail}>\n            <div className={styles.imageBox}>\n                {project.images.map((image, index) => (\n                    <Image key={index} width={width} ratio={ratio} id={image.id} title={image.title} file={image.file} />\n                ))}\n            </div>\n\n            <div\n                className={styles.textBox}\n                style={isMobile() ? {} : { right: `${textBoxRight}px`, width: `${textBoxWidth}px` }}\n            >\n                <h1>{project.title}</h1>\n                <RichText entry={project.text as EntryFields.RichText} size=\"m\" />\n                <RichText entry={project.footnote as EntryFields.RichText} size=\"s\" />\n                <div className={styles.space} />\n            </div>\n\n            <NavSkip\n                selectPrev={() => {\n                    setProjectId(projects[prevIndex].id);\n                    window.scroll(0, 0);\n                }}\n                selectNext={() => {\n                    setProjectId(projects[nextIndex].id);\n                    window.scroll(0, 0);\n                }}\n            />\n\n            <NavClose\n                onClose={onClose}\n                numProjects={projects.length}\n                currentIndex={index}\n            />\n        </div>\n    );\n}\n\nexport default ProjectDetail;","import { useEffect } from 'react';\nimport styles from './App.module.css';\nimport cx from 'classnames';\nimport useAsyncReducer from './lib/hooks/useAsyncReducer';\nimport { Pages, initState, reducer, actions } from './store/store';\nimport { isMobile } from './lib/helpers';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Curtain from './components/Curtain/Curtain';\nimport Logo from './components/Logo/Logo';\nimport Button from './components/Button/Button';\nimport Projects from './components/Projects/Projects';\nimport Info from './components/Info/Info';\nimport PageBox from './components/PageBox/PageBox';\nimport ProjectDetail from './components/ProjectDetail/ProjectDetail';\nimport CloseIcon from './components/Icons/CloseIcon';\n\n\nfunction App(): JSX.Element {\n    const { state, asyncDispatch } = useAsyncReducer(reducer, initState);\n    const { siteContent, targetPage, selectedPage, selectedProjectId } = state;\n\n    useEffect(() => asyncDispatch(actions.getSiteContent()), [ asyncDispatch ]);\n\n    const isMobileNav = (targetPage !== Pages.HOME || selectedPage !== Pages.HOME) && isMobile();\n\n    return (\n        <div className={cx('', { [styles.isHome]: selectedPage === Pages.HOME })}>\n            <Curtain\n                open={targetPage !== Pages.HOME}\n                onOpen={() => asyncDispatch(actions.setPage(targetPage))}\n                onClose={() => asyncDispatch(actions.setPage(Pages.HOME))}\n            />\n\n            <Navigation\n                isMobileNav={isMobileNav}\n                mobileNavIndex={isMobileNav ? (targetPage === Pages.INFO ? 0 : 1) : (targetPage === Pages.PROJECT_DETAIL ? 1 : -1)}\n            >\n                <Button\n                    className={isMobileNav ? styles.mobileNavButton : ''}\n                    label={isMobileNav ? <CloseIcon/> : 'Grafik'}\n                    active={targetPage === Pages.PROJECTS}\n                    disabled={!siteContent.projects.length}\n                    cta={() => asyncDispatch(actions.setTarget(Pages.PROJECTS))}\n                />\n                <Button\n                    className={isMobileNav ? styles.mobileNavButton : ''}\n                    label={isMobileNav ? '...' : 'Kontakt + Info'}\n                    active={targetPage === Pages.INFO}\n                    disabled={!siteContent.infoBlocks.length}\n                    cta={() => asyncDispatch(actions.setTarget(Pages.INFO))}\n                />\n            </Navigation>\n\n            <Logo>\n                <Button\n                    label={siteContent.config ? siteContent.config.documentTitle : 'Studio Anderhalden'}\n                    cta={() => asyncDispatch(actions.setTarget(Pages.HOME))}\n                />\n            </Logo>\n\n            <PageBox page={Pages.PROJECTS} target={targetPage} selected={selectedPage}>\n                <Projects\n                    items={siteContent.projects}\n                    config={siteContent.config}\n                    setProjectId={projectId => {\n                        asyncDispatch(actions.setProjectId(projectId));\n                        asyncDispatch(actions.setTarget(Pages.PROJECT_DETAIL));\n                        asyncDispatch(actions.setPage(Pages.PROJECT_DETAIL));\n                    }}\n                />\n            </PageBox>\n\n            {selectedPage === Pages.PROJECT_DETAIL && (\n                <ProjectDetail\n                    selectedProjectId={selectedProjectId}\n                    projects={siteContent.projects}\n                    config={siteContent.config}\n                    setProjectId={projectId => asyncDispatch(actions.setProjectId(projectId))}\n                    onClose={() => {\n                        asyncDispatch(actions.setTarget(Pages.PROJECTS));\n                        asyncDispatch(actions.setPage(Pages.PROJECTS));\n                    }}\n                />\n            )}\n\n            <PageBox page={Pages.INFO} target={targetPage} selected={selectedPage}>\n                <Info\n                    items={siteContent.infoBlocks}\n                    config={siteContent.config}\n                    open={targetPage === Pages.INFO}\n                    onOpen={() => asyncDispatch(actions.setPage(Pages.INFO))}\n                    onClose={() => asyncDispatch(actions.setPage(targetPage))}\n                />\n            </PageBox>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavClose\":\"NavClose_NavClose__1-kWt\",\"counter\":\"NavClose_counter__3vKV-\",\"counterButton\":\"NavClose_counterButton__2NWUN\",\"closeButton\":\"NavClose_closeButton__34JCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavSkip\":\"NavSkip_NavSkip__UarSh\",\"skipButton\":\"NavSkip_skipButton__2XaxE\",\"selectPrev\":\"NavSkip_selectPrev__3LaqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isHome\":\"App_isHome__oTROn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1tTPb\",\"mobileNav\":\"Navigation_mobileNav__34zkU\",\"spacer\":\"Navigation_spacer__1vJOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\",\"active\":\"Button_active__TCjlx\",\"disabled\":\"Button_disabled__2c3jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProjectsItem\":\"ProjectsItem_ProjectsItem__ixgAC\",\"title\":\"ProjectsItem_title__1n-p3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RichText\":\"RichText_RichText__1BywL\",\"mediumSize\":\"RichText_mediumSize__1Xnal\",\"smallSize\":\"RichText_smallSize__BL3Kk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageBox\":\"PageBox_PageBox__CpPMT\",\"isTarget\":\"PageBox_isTarget__fESuA\",\"isSelected\":\"PageBox_isSelected__ls1KE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Projects\":\"Projects_Projects__1ECks\",\"centerLine\":\"Projects_centerLine__39BzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageBox\":\"Image_ImageBox__16ZVW\",\"Image\":\"Image_Image__1br15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\",\"wiggle\":\"Logo_wiggle__23iAG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InfoItem\":\"InfoItem_InfoItem__26gzv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Curtain\":\"Curtain_Curtain__23SsW\",\"left\":\"Curtain_left__3IErm\",\"right\":\"Curtain_right__Zgczi\",\"open\":\"Curtain_open__3Pkll\",\"closed\":\"Curtain_closed__3MPTA\"};"],"sourceRoot":""}